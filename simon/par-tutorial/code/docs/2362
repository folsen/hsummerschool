From jerzy.karczmarczuk at unicaen.fr  Wed Dec 28 23:01:30 2011
From: jerzy.karczmarczuk at unicaen.fr (Jerzy Karczmarczuk)
Date: Wed, 28 Dec 2011 23:01:30 +0100
Subject: [Haskell-cafe] On the purity of Haskell
In-Reply-To: <4EFB8DFE.1060805@blueyonder.co.uk>
References: <4EFB5468.4000607@blueyonder.co.uk> <jdfv46$7r3$1@dough.gmane.org>
	<4EFB8DFE.1060805@blueyonder.co.uk>
Message-ID: <4EFB91BA.5070003@unicaen.fr>

Le 28/12/2011 22:45, Steve Horne a ?crit :
> Yes - AT COMPILE TIME by the principle of referential transparency it 
> always returns the same action. However, the whole point of that 
> action is that it might potentially be executed (with potentially 
> side-effecting results) at run-time. Pure at compile-time, impure at 
> run-time. What is only modeled at compile-time is realized at 
> run-time, side-effects included.
> (...)
>
> I hope If convinced you I'm not making one of the standard newbie 
> mistakes. I've done all that elsewhere before, but not today, honest.
Sorry, perhaps this is not a standard newbie mistake, but you - 
apparently - believe that an execution of an action on the "real world" 
is a side effect.

I don't think it is.
Even if a Haskell programme fires an atomic bomb, a very impure one, 
/*there are no side effects within the programme itself*/.
If you disagree, show them.

I don't think that speaking about "compile-time purity" is correct.

Jerzy Karczmarczuk


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.haskell.org/pipermail/haskell-cafe/attachments/20111228/5a62ee05/attachment.htm>


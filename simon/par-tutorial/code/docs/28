From illissius at gmail.com  Fri Apr  1 17:14:12 2011
From: illissius at gmail.com (=?ISO-8859-1?Q?G=E1bor_Lehel?=)
Date: Fri, 1 Apr 2011 17:14:12 +0200
Subject: [Haskell-cafe] SoC project: advice requested
In-Reply-To: <AANLkTikafOpvwDmEpyoDuKmp0aJJHTgoG10z0yeL2xbs@mail.gmail.com>
References: <AANLkTi=SacKCY_KdVQ66zqL44cPXLBVZePrUmXeBoWVU@mail.gmail.com>
	<AANLkTikafOpvwDmEpyoDuKmp0aJJHTgoG10z0yeL2xbs@mail.gmail.com>
Message-ID: <AANLkTinhR+8ke8RYvCD02rnHy1ViSix68n_MhOan0dhS@mail.gmail.com>

2011/4/1 Johan Tibell <johan.tibell at gmail.com>:
> Hi G?bor,
>
> There are a few non-Cabal projects on the ideas list
> (http://hackage.haskell.org/trac/summer-of-code/report/1). Just
> thought I mentioned it in case you missed it.

I saw it :)

>
> 2011/4/1 G?bor Lehel <illissius at gmail.com>:
>> Alternately, I'd be very happy to receive suggestions
>> about other GHC-related work which would be considered appropriate.
>> (Or, heck, any other compiler.)
>
> Perhaps you could send an email to the GHC mailing list and ask if
> they have any good GSoC projects? I'm not sure the Simons are reading
> every post on this list.

Oh, hmm. Good idea. Should've cross-posted from the beginning :|.
What's the accepted etiquette here? Forward the original message? Send
a short heads-up with a link to this thread in the archives?

>
>> A related problem is that, having done only minimal GHC hacking so
>> far, drawing up a detailed plan / design in advance as part of the
>> proposal would be difficult. If this is considered necessary and there
>> is someone willing to mentor the project I'd be happy to research the
>> problem in advance of the submission deadline so I can submit a more
>> detailed proposal. Alternately, if it's deemed acceptable to learn the
>> ropes / come up to speed as part of the SoC itself that's fine by me
>> as well. (Wasn't this sort of the point originally?)
>
> It's not required but it helps. Us mentors need to figure out if
> you're likely to finish your project or not. Showing that you
> understand what needs to be done is a good sign. If you're not sure
> what needs to be done there's still a chance you'll get accepted if
> people who already know GHC thinks one summer is enough time to both
> get familiar with GHC and add something worthwhile.
>
>> Background info: I've taken part in the SoC once before, back in 2006
>> (when I applied to KDE to work on Krita). I don't yet have any Hackage
>> packages to my name, however I'm working on a C++-to-Haskell bindings
>> generator for my bachelor's thesis (the primary target being Qt*)
>> which is likely to spawn quite a few. (I've avoided making any noise
>> about this because I didn't want to put the cart before the horse: the
>> plan was (and still is) to announce something once there is something
>> worth announcing, and it's not at that point quite yet.)
>
> How about adding Haskell support for SWIG? Being able to call C++
> libraries from Haskell would be very useful.

Maybe I have a case of NIH, but I'm not very familiar with SWIG either
:). None of the other Qt/KDE bindings for other languages use it, and
as far as I can remember the rationale was that it's too limited.
Based on this assumption I never felt the inclination to learn about
it, either. That said, "being able to call C++ from Haskell" is pretty
much what the bindings generator I'm working on aims to accomplish.
(For certain kinds of libraries -- object-oriented ones which make
only limited use of templates, essentially.) Adding C++ support to the
FFI (per my previous message) would still have considerable
value-added in comparison to this -- not having to call a generator is
always a plus, and it would also be somewhat orthogonal and
lower-level (parts of the generated bindings could be switched over to
use it internally, for example).

>
> Cheers,
> Johan
>



-- 
Work is punishment for failing to procrastinate effectively.



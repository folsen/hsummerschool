From conal at conal.net  Fri Dec 30 18:37:34 2011
From: conal at conal.net (Conal Elliott)
Date: Fri, 30 Dec 2011 09:37:34 -0800
Subject: [Haskell-cafe] On the purity of Haskell
In-Reply-To: <CABHqrU=-AYXLXFXzfxbymrtJ-RoqaXuta4TmvfRq9fSsuniPkg@mail.gmail.com>
References: <4EFB5468.4000607@blueyonder.co.uk> <jdfv46$7r3$1@dough.gmane.org>
	<4EFB8DFE.1060805@blueyonder.co.uk> <jdh9h6$gba$1@dough.gmane.org>
	<4EFCA66D.4060609@blueyonder.co.uk> <jdiesl$5sp$1@dough.gmane.org>
	<4EFCCA86.4020709@blueyonder.co.uk> <jdjtv1$6r0$1@dough.gmane.org>
	<CAD6SzRLxjE7Xgi6dXMknwt0oFRN_m3Z868jAKnsayR=w1=Se6w@mail.gmail.com>
	<FD41967A-36F7-4203-87E3-D4392146C53D@mobileink.com>
	<CABHqrUm6W8Gw66E7S8RVQe3os5TqDQiPCn-vtuxw4aPOf2R2rA@mail.gmail.com>
	<8F4B5EDB-3653-44F1-86A9-5AEC32EFD475@mobileink.com>
	<CABHqrUmvkEJD5dX2TUvj3_HF0sD+BpbPu2Mn4to7=oqXcxAkdQ@mail.gmail.com>
	<CAD6SzRJ+ufBbqS7jFNSK8dBMfW5TRe_ei2GET9hSnpS-TRme5A@mail.gmail.com>
	<CABHqrU=-AYXLXFXzfxbymrtJ-RoqaXuta4TmvfRq9fSsuniPkg@mail.gmail.com>
Message-ID: <CAD6SzRKOoUzkNZHfm-WY8xEk1sGTHq51frtFoLNUzdsEgmtpOA@mail.gmail.com>

On Fri, Dec 30, 2011 at 9:30 AM, Colin Adams <colinpauladams at gmail.com>wrote:

>
>
> On 30 December 2011 17:27, Conal Elliott <conal at conal.net> wrote:
>
>>  On Fri, Dec 30, 2011 at 9:20 AM, Colin Adams <colinpauladams at gmail.com>wrote:
>>
>>>
>>> proof: f is a function, and it is taking the same argument each time.
>>> Therefore the result is the same each time.
>>>
>>
>> Careful of circular reasoning here. Is f actually a "function" in the
>> mathematical sense? It's that math sense that you need to reach your
>> conclusion.
>>
>> Yes. Because Haskell is a functional programming language.
>

And how do you know that claim to be true?

And do you mean a *purely* functional language? Otherwise f might be in the
impure part. If you do mean *purely* functional, aren't you arguing for
purity by assuming purity?

Moreover, do you have a precise definition for "functional"? I've witnessed
a lot of these arguments and have seen a diversity of interpretations.
Which is why I recommend shifting away from such fuzzy terms and following
Peter Landin's recommended more precise & substantive replacement, namely
"denotative". (See
http://conal.net/blog/posts/is-haskell-a-purely-functional-language/#comment-35882for
a quote and reference.)

  - Conal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.haskell.org/pipermail/haskell-cafe/attachments/20111230/26c33d33/attachment.htm>


From mkscrg at gmail.com  Fri Dec 23 22:47:49 2011
From: mkscrg at gmail.com (Michael Craig)
Date: Fri, 23 Dec 2011 16:47:49 -0500
Subject: [Haskell-cafe] Composing Enumeratees in enumerator
Message-ID: <CAHa9zAGkw7mOvhk+4Q6Xe_p67qyi2TASVJD3z6QeoXFFfU-wCA@mail.gmail.com>

I've been looking for a way to compose enumeratees in the enumerator
package, but I've come up with nothing so far. I want this function

(=$=) :: Monad m => Enumeratee a0 a1 m b -> Enumeratee a1 a2 m b ->
Enumeratee a0 a2 m b

I'm building a modular library on top of enumerator that facilitates
reading time series data from a DB, applying any number of transformations
to it, and then writing it back / doing something else with it. I'd like to
be able to write simple transformations (enumeratees) and compose them
without binding them to either a db reader (enumerator) or db writer
(iteratee).

I've been looking at the iterIO package as a possible alternative, because
it seems to allow easy composition of Inums (enumeratees). I'm a little
skittish of it because it seems unpopular next to enumerator.

Thoughts on these issues?

Cheers,
Mike S Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.haskell.org/pipermail/haskell-cafe/attachments/20111223/ac8a640a/attachment.htm>


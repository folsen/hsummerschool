From ckkashyap at gmail.com  Fri Dec 16 13:23:42 2011
From: ckkashyap at gmail.com (C K Kashyap)
Date: Fri, 16 Dec 2011 17:53:42 +0530
Subject: [Haskell-cafe] DB vs read/show for persisting large data
In-Reply-To: <CADLz5wX4B6a6k6zPdV61BX6Jabnx8RKdq25Qs0e5pp=ae98C0w@mail.gmail.com>
References: <CAGdT1gqohuKtQPQdH2FS==HTqCtDVYvjKibD_wZ1vtF7Vxr_wA@mail.gmail.com>
	<CAKA2JgJ3oyfKeyVR8p=D1xYcpbH_gVXzO6_NW5L5+rvK0uhS2w@mail.gmail.com>
	<1323870692-sup-1533@nixos> <4EE8B132.3070100@goto10.org>
	<CADLz5wX4B6a6k6zPdV61BX6Jabnx8RKdq25Qs0e5pp=ae98C0w@mail.gmail.com>
Message-ID: <CAGdT1go8zTbJuHRFbViQVfeqrF1XVdq4XUO0bZ7am9hu9Qgo=g@mail.gmail.com>

Thank you so much .. I am going to try out acid-state. I've been shying
away from template-haskell ... but from the looks of it,
acid-state/safecopy can do what I am looking for.
Regards,
Kashyap

On Thu, Dec 15, 2011 at 12:13 AM, Bas van Dijk <v.dijk.bas at gmail.com> wrote:

> On 14 December 2011 15:22, Claude Heiland-Allen <claude at goto10.org> wrote:
> > I ran into this very nightmare in one project, and was recommend safecopy
> > [0] by someone on the #haskell IRC channel.  I've not (yet) used it but
> it
> > looks very nice!
> >
> > [0] http://hackage.haskell.org/package/safecopy
>
> Or better yet, use acid-state which is build on top of safecopy:
>
> http://acid-state.seize.it/
>
> Bas
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.haskell.org/pipermail/haskell-cafe/attachments/20111216/c7df35d0/attachment.htm>


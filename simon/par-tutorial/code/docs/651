From uzytkownik2 at gmail.com  Sat Apr 23 07:09:30 2011
From: uzytkownik2 at gmail.com (Maciej Piechotka)
Date: Sat, 23 Apr 2011 07:09:30 +0200
Subject: [Haskell-cafe] There is no null; Maybe/Option types
In-Reply-To: <alpine.DEB.2.00.1104222211170.28351@anubis>
References: <BANLkTi=irBB_YvfEm3ms0Vxd6xDb7tcPcg@mail.gmail.com>
	<alpine.DEB.2.00.1104222123290.28351@anubis>
	<1303501989.3911.4.camel@localhost.localdomain>
	<alpine.DEB.2.00.1104222211170.28351@anubis>
Message-ID: <1303535377.3911.5.camel@localhost.localdomain>

On Fri, 2011-04-22 at 22:11 +0200, Henning Thielemann wrote:
> On Fri, 22 Apr 2011, Maciej Marcin Piechotka wrote:
> 
> > On Fri, 2011-04-22 at 21:26 +0200, Henning Thielemann wrote:
> >>
> >> In idiomatic Haskell you would write
> >>
> >> case userList of
> >>     Nothing -> Nothing
> >>     Just plainUserList =
> >>        let user = findUser "bob" plainUserList
> >>        ...
> >>
> >> since (userList /= Nothing) requires an Eq instance without need and it
> >> requires fromJust. Or was there an educational purpose to write it with
> >> (/= Nothing) ?
> >
> > Using 'more advanced haskell'
> >
> > email = getEmail =<< findUser "bob" =<< userList
> 
> This is what Christopher Done wrote some lines below the code, that I 
> quoted.

Ups. Sorry - I didn't have all the context.

Regards
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 836 bytes
Desc: This is a digitally signed message part
URL: <http://www.haskell.org/pipermail/haskell-cafe/attachments/20110423/736c6282/attachment.pgp>


From serguei.son at gmail.com  Mon Apr 11 16:02:42 2011
From: serguei.son at gmail.com (Serguei Son)
Date: Mon, 11 Apr 2011 14:02:42 +0000 (UTC)
Subject: [Haskell-cafe] Foreign function performance: monadic vs pure
References: <loom.20110411T135905-625@post.gmane.org>
	<1302527654.18936.14.camel@localhost.localdomain>
	<BANLkTi=CuDAH7G+S27mMhV9YHevfXmgDew@mail.gmail.com>
	<loom.20110411T155115-463@post.gmane.org>
Message-ID: <loom.20110411T155944-565@post.gmane.org>

Serguei Son <serguei.son <at> gmail.com> writes:

> 
> Felipe Almeida Lessa <felipe.lessa <at> gmail.com> writes:
> 
> > 
> > On Mon, Apr 11, 2011 at 10:14 AM, Maciej Marcin Piechotka
> > <uzytkownik2 <at> gmail.com> wrote:
> > >> main = mapM (\x -> return $! c_sin_u) [1..n]
> > > 0.012 s
> > 
> > This should be
> > 
> >   main = mapM (\x -> return $! c_sin_u x) [1..n]
> > 
> 
> So if I must use a safe function returning IO a,
> there is no way to improve its performance? To give you
> a benchmark, calling gsl_ran_ugaussian a million times
> in pure C takes only a second or two on my system.
> 

Also, please note that I can force the evaluation 
of c_sin, e.g. 

mapM (return . c_sin) [1..n] >>= (print $ foldl' (+) 0)

And it will still execute reasonably fast.






From miguelimo38 at yandex.ru  Sat Dec 24 21:29:07 2011
From: miguelimo38 at yandex.ru (MigMit)
Date: Sun, 25 Dec 2011 00:29:07 +0400
Subject: [Haskell-cafe] If you'd design a Haskell-like language,
	what would you do different?
In-Reply-To: <CAO0Ooq1MNJC=pHsgtZYM+56zuBQr23Vb9-ygbRgc8NqbwuJ+aQ@mail.gmail.com>
References: <1324322427.2233.6.camel@fuzxxl>
	<CAO0Ooq1vMieSY3cGOpLkgGeDdN1Hpi7xsHCR=nJfEtvg2Axi5g@mail.gmail.com>
	<20111220070644.GA32105@sniper>
	<7320B5CF-0DEA-4665-9C33-A73811885264@ouroborus.net>
	<CAO0Ooq0QYWw2ntFUHd0Rf9Q6zN-p+3ocqGQS=pjeXYQ5vhFOnA@mail.gmail.com>
	<BB0E5FD7-780F-4D95-975E-40E4C1DEDEEC@yandex.ru>
	<CAO0Ooq0-Ru4TOdx+gpMRTyVZupFKgRUbbJjyqXKYuE7miTKqAg@mail.gmail.com>
	<654DA160-C961-44AA-B420-0DEE81A5CB0B@yandex.ru>
	<CAO0Ooq1MNJC=pHsgtZYM+56zuBQr23Vb9-ygbRgc8NqbwuJ+aQ@mail.gmail.com>
Message-ID: <AA821438-98DA-4B64-BCF7-938353F306FA@yandex.ru>



?????????? ? iPad

24.12.2011, ? 18:50, Alexander Solla <alex.solla at gmail.com> ???????(?):

> In the same way, denotational semantics adds features which do not apply to a theory of finite computation.

And why exactly should we limit ourselves to some theory you happen to like?

>  
> 
> > The /defining/ feature of a bottom is that it doesn't have an interpretation. 
> 
> What do you mean by "interpretation"?
> 
> You know, the basic notion of a function which maps syntax to concrete values.  
> 
> http://en.wikipedia.org/wiki/Model_theory

But (_|_) IS a concrete value.

> But they ARE very similar to other values. They can be members of otherwise meaningful structures, and you can do calculations with these structures. "fst (1, _|_)" is a good and meaningful calculation. 
> 
> Mere syntax.

So what?

> >  Every other Haskell value /does/ have an interpretation.
> 
> So, (_|_) is bad, but (1, _|_) is good? 
> 
> I did not introduce "good" and "bad" into this discussion.  I have merely said (in more words) that I want my hypothetical perfect language to prefer OPERATIONAL (model) SEMANTICS for a typed PARACONSISTENT LOGIC over the DENOTATIONAL SEMANTICS which the official documentation sometimes dips into.

Well, that's a different story. But it seems to me that the term "Haskell-like" won't apply to that kind of language. Also, it seems to me (though I don't have any kind of proof) that denotational semantics is something that is much simpler.

> It is clear that denotational semantics is a Platonic model of constructive computation.

Could you please stop offending abstract notions?

> Then you are mistaken.  I am talking about choosing the appropriate mathematical model of computation to accurately, clearly, and simply describe the language's semantics.

Well, domain theory does exactly that for Haskell.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.haskell.org/pipermail/haskell-cafe/attachments/20111225/92dab07f/attachment.htm>


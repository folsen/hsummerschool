From cdsmith at gmail.com  Fri Dec 30 21:04:21 2011
From: cdsmith at gmail.com (Chris Smith)
Date: Fri, 30 Dec 2011 13:04:21 -0700
Subject: [Haskell-cafe] On the purity of Haskell
In-Reply-To: <EC631798-2BB6-4D56-9FC6-526B794B4EAE@mobileink.com>
References: <4EFB5468.4000607@blueyonder.co.uk>
	<jdfv46$7r3$1@dough.gmane.org> <4EFB8DFE.1060805@blueyonder.co.uk>
	<jdh9h6$gba$1@dough.gmane.org> <4EFCA66D.4060609@blueyonder.co.uk>
	<jdiesl$5sp$1@dough.gmane.org> <4EFCCA86.4020709@blueyonder.co.uk>
	<jdjtv1$6r0$1@dough.gmane.org>
	<CAD6SzRLxjE7Xgi6dXMknwt0oFRN_m3Z868jAKnsayR=w1=Se6w@mail.gmail.com>
	<FD41967A-36F7-4203-87E3-D4392146C53D@mobileink.com>
	<CABHqrUm6W8Gw66E7S8RVQe3os5TqDQiPCn-vtuxw4aPOf2R2rA@mail.gmail.com>
	<8F4B5EDB-3653-44F1-86A9-5AEC32EFD475@mobileink.com>
	<CABHqrUmvkEJD5dX2TUvj3_HF0sD+BpbPu2Mn4to7=oqXcxAkdQ@mail.gmail.com>
	<FE478236-BE49-4C1C-941A-B51AB1CDD043@mobileink.com>
	<CAD6SzRLeZ-r0Ebzz5pSeSWVtw=5RPc7aCYyQB_DxfqC+NhXA4w@mail.gmail.com>
	<EC631798-2BB6-4D56-9FC6-526B794B4EAE@mobileink.com>
Message-ID: <1325275461.16545.215.camel@godel>

On Fri, 2011-12-30 at 12:24 -0600, Gregg Reynolds wrote:
> No redefinition involved, just a narrowing of scope.  I assume that,
> since we are talking about computation, it is reasonable to limit  the
> discussion to the class of computable functions - which, by the way,
> are about as deeply embedded in orthodox mathematics as you can get,
> by way of recursion theory.  What would be the point of talking about
> non-computable functions for the semantics of a programming language?

Computability is just a distraction here.  The problem isn't whether
"getAnIntFromUser" is computable... it is whether it's a function at
all!  Even uncomputable functions are first and foremost functions, and
not being computable is just a property that they have.  Clearly this is
not a function at all.  It doesn't even have the general form of a
function: it has no input, so clearly it can't map each input value to a
specific output value.  Now, since it's not a function, it makes little
sense to even try to talk about whether it is computable or not (unless
you first define a notion of computability for something other than
functions).

If you want to talk about things that read values from the keyboard or
such, calling them "uncomputable" is confusing, since the issue isn't
really computability at all, but rather needing information from a
constantly changing external environment.  I suspect that at least some
people talking about "functions" are using the word to mean a
computational procedure, the sort of thing meant by the C programming
language by that word.  Uncomputable is a very poor word for that idea.


-- 
Chris Smith




From warrensomebody at gmail.com  Wed Feb  2 23:19:11 2011
From: warrensomebody at gmail.com (Warren Harris)
Date: Wed, 2 Feb 2011 14:19:11 -0800
Subject: [Haskell-cafe] timely shutdown of timer threads
In-Reply-To: <AANLkTinCr3q_1VmqiEp0EwxoGvt8+a17ktmpqeNOTvF1@mail.gmail.com>
References: <84DE9201-9822-4A1A-A17A-682C146C771C@gmail.com>
	<4D48C09E.2050001@vex.net>
	<11F6D72C-5841-4FFF-B3B6-7B5C1DDC5C5E@gmail.com>
	<AANLkTinCr3q_1VmqiEp0EwxoGvt8+a17ktmpqeNOTvF1@mail.gmail.com>
Message-ID: <F2B4A645-CB18-41C2-A2D5-20E721FE849A@gmail.com>


On Feb 2, 2011, at 2:02 PM, Johan Tibell wrote:

> On Wed, Feb 2, 2011 at 10:42 PM, Warren Harris <warrensomebody at gmail.com> wrote:
>> Interesting. I hadn't thought of this solution. You're forking the timer to yet a third thread so that if it continues waiting beyond the checkpoint thread shutdown it doesn't really matter. I guess that works as long as the main thread doesn't wait for all other threads to terminate before terminating the app.
>> 
>> It still seems to me that haskell is lacking when it comes to operations that can wait for multiple conditions.
> 
> I think we can make waiting for both I/O activity and timers at the
> same time using the I/O manager. I will need to do this for my planned
> timeout support in the network package.

I could see wanting to wait for an MVar, timeout, IO activity, STM channels (anything that could block), all in the same event handler. (Rather like the old WaitForMultipleObjects on Windows.) This would also require a way to test each condition without blocking (MVar has this with tryTakeMVar, but it doesn't look like they all support it.)

Warren

